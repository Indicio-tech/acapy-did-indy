version: '3'

services:

  agent:
    image: acapy-did-web
    build:
      context: ..
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - ./entrypoint.sh:/entrypoint.sh:ro,z
    environment:
      RUST_LOG: warn
      TUNNEL_ENDPOINT: http://ngrok:4040
    entrypoint: >
      /bin/sh -c '/entrypoint.sh aca-py "$$@"' --
    command: >
      start
        --inbound-transport http 0.0.0.0 3000
        --outbound-transport http
        --endpoint http://issuer:3000
        --admin 0.0.0.0 3001
        --admin-insecure-mode
        --webhook-url http://demo-app:3000/webhook
        --webhook-url http://webhook-listener:8080
        --no-ledger
        --wallet-type askar
        --emit-new-didcomm-prefix
        --wallet-storage-type default
        --wallet-name issuer
        --wallet-key insecure
        --auto-provision
        --log-level debug
        --debug-webhooks
        --plugin acapy_did_web
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      ngrok:
        condition: service_healthy
      didweb:
        condition: service_started
  
  ngrok:
    image: ngrok/ngrok
    restart: unless-stopped
    hostname: ngrok
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: ["http", "didweb:8000"]
    healthcheck:
      test: /bin/bash -c "</dev/tcp/ngrok/4040"
      interval: 3s
      timeout: 3s
      start_period: 5s
      retries: 5

  didweb:
    image: did-web-server
    build:
      context: ..
      dockerfile: Dockerfile.server

  demo:
    image: acapy-did-web-demo
    build:
      context: ..
      dockerfile: demo/Dockerfile
    environment:
      AGENT: http://agent:3001
    depends_on:
      agent:
        condition: service_healthy
      didweb:
        condition: service_started
